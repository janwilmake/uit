{
  "openapi": "3.0.0",
  "info": {
    "title": "ZipTree API",
    "description": "API for fetching and processing zip file contents as tree structures. This service can calculate token estimates for text files, provide file size information, and structure content hierarchically.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://ziptree.uithub.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/tree/{zipUrl}": {
      "get": {
        "summary": "Get zip file contents as tree structure",
        "description": "Fetch and process a zip file's contents, returning a hierarchical tree structure or a flat list of files with sizes or CRC32 values. The service can calculate token estimates for text files and filter by base path.",
        "parameters": [
          {
            "name": "zipUrl",
            "in": "path",
            "description": "URL-encoded path to a zip file",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "https://example.com/archive.zip"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Output type format (token-tree, token-list, file size by default, or crc32)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["token-tree", "token-list", "crc32"]
            }
          },
          {
            "name": "basePath",
            "in": "query",
            "description": "Base path filter within the zip file to process only specific directories",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "omitFirstSegment",
            "in": "query",
            "description": "If true, omits the first segment of each path",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "accept",
            "in": "query",
            "description": "Response format (application/json or text/yaml)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["application/json", "text/yaml"],
              "default": "application/json"
            }
          },
          {
            "name": "max-age",
            "in": "query",
            "description": "Cache control max-age in seconds (default: 86400 - 24 hours)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 86400
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Basic authentication with the server secret. Must be Base64 encoded.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Basic c2VjcmV0X3ZhbHVl"
          },
          {
            "name": "x-source-authorization",
            "in": "header",
            "description": "Authorization header to pass to the source ZIP URL",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept",
            "in": "header",
            "description": "Accept header for response format (application/json or text/yaml)",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["application/json", "text/yaml"],
              "default": "application/json"
            }
          },
          {
            "name": "Cache-Control",
            "in": "header",
            "description": "Cache-Control header to override default caching behavior",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "max-age=3600"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully processed zip file",
            "headers": {
              "X-First-Segment": {
                "schema": {
                  "type": "string"
                },
                "description": "The first segment of the paths in the zip file"
              },
              "Cache-Control": {
                "schema": {
                  "type": "string"
                },
                "description": "Cache control directives applied to the response"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "description": "Flat file list with CRC32 values",
                      "additionalProperties": {
                        "type": "string",
                        "description": "CRC32 hash indicating file integrity"
                      },
                      "example": {
                        "/file1.txt": "e09e6d3c",
                        "/dir/file2.txt": "066ad16b"
                      }
                    },
                    {
                      "type": "object",
                      "description": "Flat file list with sizes or token counts",
                      "additionalProperties": {
                        "type": "integer",
                        "description": "File size in bytes or token estimate"
                      },
                      "example": {
                        "/file1.txt": 1000,
                        "/dir/file2.txt": 2000
                      }
                    },
                    {
                      "type": "object",
                      "description": "Hierarchical tree with sizes or token counts",
                      "properties": {
                        "__size": {
                          "type": "integer",
                          "description": "Total size or token count of all files in this directory"
                        }
                      },
                      "additionalProperties": {
                        "oneOf": [{ "type": "integer" }, { "type": "object" }]
                      },
                      "example": {
                        "__size": 3000,
                        "file1.txt": 1000,
                        "dir": {
                          "__size": 2000,
                          "file2.txt": 2000
                        }
                      }
                    }
                  ]
                }
              },
              "text/yaml": {
                "schema": {
                  "type": "string",
                  "description": "YAML representation of the tree or list"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "headers": {
              "WWW-Authenticate": {
                "schema": {
                  "type": "string"
                },
                "description": "Authentication challenge"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Secret invalid"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Zip file not found or invalid path",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Zip not found https://example.com/archive.zip"
                    },
                    "status": {
                      "type": "integer",
                      "example": 404
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "details": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic",
        "description": "Basic authentication using the server's secret token"
      }
    },
    "schemas": {
      "FileEntry": {
        "type": "object",
        "properties": {
          "crc32": {
            "type": "string",
            "description": "CRC32 hash of the file content"
          },
          "uncompressedSize": {
            "type": "integer",
            "description": "Uncompressed size of the file in bytes"
          }
        }
      }
    }
  }
}
